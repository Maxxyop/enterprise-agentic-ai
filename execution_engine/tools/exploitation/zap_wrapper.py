# zap_wrapper.py

import subprocess

class ZAPWrapper:
    def __init__(self, zap_path, target_url):
        self.zap_path = zap_path
        self.target_url = target_url

    def start_zap(self):
        """Starts the OWASP ZAP daemon."""
        command = [self.zap_path, '-daemon', '-port', '8080']
        subprocess.Popen(command)

    def scan(self):
        """Initiates a scan on the target URL."""
        command = ['curl', '-X', 'POST', f'http://localhost:8080/JSON/ascan/action/scan/?url={self.target_url}']
        subprocess.run(command)

    def get_scan_status(self, scan_id):
        """Retrieves the status of the scan."""
        command = ['curl', '-X', 'GET', f'http://localhost:8080/JSON/ascan/view/status/?scanId={scan_id}']
        result = subprocess.run(command, capture_output=True, text=True)
        return result.stdout

    def stop_zap(self):
        """Stops the OWASP ZAP daemon."""
        command = ['curl', '-X', 'GET', 'http://localhost:8080/JSON/core/action/shutdown/']
        subprocess.run(command)